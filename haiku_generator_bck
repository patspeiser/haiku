var fs = require('fs');

//haiku generator
function haiku_generator(){
	this.filePath = './cmudict.txt';
	console.log(this.filePath);
	console.log('am i here');
	this.dict = this.readDictionary(this.filePath);
	this.syllableMap = {};
}

//read the dictionary file
haiku_generator.prototype.readDictionary = function(file) {
	return fs.readFileSync(file).toString();
};

//get syllable count of word
haiku_generator.prototype.getSyllables = function(wordArray){
	var syllables = 0;
	for (var i = 2; i < wordArray.length; i++){
		var hasNum = wordArray[i].substr(-1);
		if (parseInt(hasNum) == 0 || parseInt(hasNum) == 1 || parseInt(hasNum) == 2){
			syllables++;
		}
	} 
	return syllables;
}

// create an object where it breaks down words by syllable count.
haiku_generator.prototype.pushToSyllableMap = function(word, syllable){
	if (!(syllables in syllableMap)){
		this.syllableMap[syllables] = [word];
	} else {
		this.syllableMap[syllables].push(word);
	}
};

//get a random number to use when looking up passed in structure array
haiku_generator.prototype.RNG = function(syllableCount){
	var max = this.syllableMap[syllableCount].length;
	var randomIndex = Math.floor(Math.random() * max);
	return randomIndex;
};

//make sure the structure is correct
haiku_generator.prototype.checkStructure = function(array){
	var lineIsGood = false;
	var thisLine = 0;
	var line = 0;
	var lineCount = [5,12,17];
	//get first array
	array.forEach( function(lineArr){
		//for each item in array
		lineArr.forEach( function(el){
			thisLine+=el;
		});
		if (lineCount[line] == thisLine){
			lineIsGood = true;
		}
		line++;
	});
	return lineIsGood;
};
//console.log(checkStructure([[1,1,1,1,1,1],[1,1,2,2,1],[5]]));

//get a word to add to our Haiku. needs a syllable count
haiku_generator.prototype.getWord = function(syllables){
	return syllableMap[syllables][RNG(syllables)];
};
//console.log(getWord(2));

//get each row
haiku_generator.prototype.formatData = function(data){
	var lines = data.toString().split("\n"),
		lineSplit;
	lines.forEach(function(line){
		lineSplit = line.split(" ");
		var lineSyllables = getSyllables(lineSplit);
		if (lineSyllables < 7){
			if (!lineSplit[0].match(/[\d\W]/)){
				pushToSyllableMap(lineSplit[0], lineSyllables);	
			}
		}
	});
};

haiku_generator.prototype.createHaiku = function(structure){
	var haiku = '';
	this.readDictionary(this.dict);
	this.formatData(this.dict);
	
	if(checkStructure(structure) === true){
		structure.forEach( function(arr){
			arr.forEach( function(el){
				var word = getWord(el).toLowerCase();
				haiku += word + ' ';
			});
			haiku += '\n';
		});
	} else {
		console.log('Hey! Make sure the structure you\'re passing in adds up to 17 total and that the lines are as follows, 5,7,5 in total.');
	}
	return haiku;			
};

for (var i = 0; i < 5; i++){
	haiku_generator.prototype.createHaiku([[1,2,2],[3,2,2],[5]])
};

module.exports = haiku_generator;
